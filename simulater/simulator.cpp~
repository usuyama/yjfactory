#include <iostream>
#include <fstream>

using namespace std;

#define MEMSIZE 10000;
#define INSTSIZE 10000;

class Simulator{
private:
  int pc;
  int registers[32];
  int inst_mem[100000];
  int data_mem[100000];

public:
  Simulator(char* program){
    int count=0;
    /* set pc */
    pc=0;

    ifstream fin(program, ios::in | ios::binary);
    if(!fin){
      cout << "cannot open\n";
      //      return 1;
    }

    /* load instructions */
    while(!fin.eof()){
      fin.read((char *)(inst_mem+count),sizeof(int));
      cout << hex << inst_mem[count] << endl;
      count++;
    }
    fin.close();
  }

  void doOneinst(){
    int inst;
    int opcode;
    for(;;){
      inst=inst_mem[pc];
      opcode = inst >> 26;
      
      if(opcode==2){
	cout<<"hoge\n";
      }
      else{
	cerr << "undefined instruction: opcode = " << opcode << endl;
	//	print_status();
	//	exit(1);
      }
    }
  }
};

  int main(int argc, char* argv[]){
    if(argc < 1){
      cout << "enter input binary file\n";
      return 0;
    }

    Simulator sim(argv[1]);

    return 0;
  }
    
    


